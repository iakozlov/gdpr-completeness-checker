{
  "1": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.\nSYMBOLIC: &obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).\nPREDICATES: role(processor); authorization(controller); engage_sub_processor\nCLAUSE: that, in the event of subprocessing, it has previously informed the controller and obtained its prior written consent;\nExpected output: role(processor); authorization(controller); engage_sub_processor\n\nExample 2:\nREQUIREMENT: The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.\nSYMBOLIC: &obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).\nPREDICATES: role(processor); authorization(controller); engage_sub_processor\nCLAUSE: Taking into account the state of the art, the costs of implementation and the nature, scope, context and purposes of Processing as well as the risk of varying likelihood and severity for the rights and freedoms of natural persons, processor shall implement and maintain appropriate technical and organizational security measures to protect Personal Data from Security Incidents and to preserve the security, integrity, availability, resiliency and confidentiality of the Personal Data and processor systems used for Processing Personal Data.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.\nSYMBOLIC: &obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).\nPREDICATES: role(processor); authorization(controller); engage_sub_processor\nCLAUSE: Inventory of assets facilities are identified and an inventory of these assets shall be facilities are identified and an inventory of these assets shall be facilities are identified and an inventory of these assets shall be\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.\nSYMBOLIC: &obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).\nPREDICATES: role(processor); authorization(controller); engage_sub_processor\nCLAUSE: If the Data Protection Legislation applies to the Processing of controller Personal Data and controller is a Data Processor acting under the instructions of a third-party Data Controller, controller warrants to processor that controller\u2019s instructions and actions with respect to that controller Personal Data, including its appointment as Data Processor have been authorized by the Third Party Data Controller and shall provide evidence thereof , at processor\u2019s request.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.\nSYMBOLIC: &obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).\nPREDICATES: role(processor); authorization(controller); engage_sub_processor\nCLAUSE: controller acknowledges and agrees that (taking into account the state of the art, the costs of implementation and the nature, scope, context and purposes of the Processing of controller Personal Data as well as the risks to individuals) the Security Measures implemented and maintained by processor as set out in Section 13 (processor\u2019s Security Measures) and\u00a0Appendix 2\u00a0provide a level of security appropriate to the risk in respect of the controller Data.\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.\nSYMBOLIC: &obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).\nPREDICATES: role(processor); authorization(controller); engage_sub_processor\nCLAUSE: The processor will engage sub-processors without seeking any authorization from the controller.\nExpected output: -engage_sub_processor; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.",
        "symbolic": "&obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).",
        "predicates": "role(processor); authorization(controller); engage_sub_processor",
        "clause": "that, in the event of subprocessing, it has previously informed the controller and obtained its prior written consent;",
        "expected_output": "role(processor); authorization(controller); engage_sub_processor",
        "dpa_source": "Online 133"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.",
        "symbolic": "&obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).",
        "predicates": "role(processor); authorization(controller); engage_sub_processor",
        "clause": "Taking into account the state of the art, the costs of implementation and the nature, scope, context and purposes of Processing as well as the risk of varying likelihood and severity for the rights and freedoms of natural persons, processor shall implement and maintain appropriate technical and organizational security measures to protect Personal Data from Security Incidents and to preserve the security, integrity, availability, resiliency and confidentiality of the Personal Data and processor systems used for Processing Personal Data.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 108"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.",
        "symbolic": "&obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).",
        "predicates": "role(processor); authorization(controller); engage_sub_processor",
        "clause": "Inventory of assets facilities are identified and an inventory of these assets shall be facilities are identified and an inventory of these assets shall be facilities are identified and an inventory of these assets shall be",
        "expected_output": "role(processor)",
        "dpa_source": "Online 67"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.",
        "symbolic": "&obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).",
        "predicates": "role(processor); authorization(controller); engage_sub_processor",
        "clause": "If the Data Protection Legislation applies to the Processing of controller Personal Data and controller is a Data Processor acting under the instructions of a third-party Data Controller, controller warrants to processor that controller\u2019s instructions and actions with respect to that controller Personal Data, including its appointment as Data Processor have been authorized by the Third Party Data Controller and shall provide evidence thereof , at processor\u2019s request.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 143"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.",
        "symbolic": "&obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).",
        "predicates": "role(processor); authorization(controller); engage_sub_processor",
        "clause": "controller acknowledges and agrees that (taking into account the state of the art, the costs of implementation and the nature, scope, context and purposes of the Processing of controller Personal Data as well as the risks to individuals) the Security Measures implemented and maintained by processor as set out in Section 13 (processor\u2019s Security Measures) and\u00a0Appendix 2\u00a0provide a level of security appropriate to the risk in respect of the controller Data.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 139"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.",
        "symbolic": "&obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).",
        "predicates": "role(processor); authorization(controller); engage_sub_processor",
        "clause": "The processor will engage sub-processors without seeking any authorization from the controller.",
        "expected_output": "-engage_sub_processor; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall not engage a sub-processor without a prior specific or general written authorization of the controller.",
    "requirement_symbolic": "&obligatory{-engage_sub_processor} :- role(processor), not authorization(controller).",
    "examples_count": {
      "satisfying": 141,
      "no_facts": 8998,
      "partial": 4098
    }
  },
  "2": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.\nSYMBOLIC: &obligatory{inform_controller_changes} :- role(processor), general_written_authorization.\nPREDICATES: role(processor); general_written_authorization; inform_controller_changes\nCLAUSE: The data processor shall inform in writing the data controller of any intended\nExpected output: role(processor); general_written_authorization; inform_controller_changes\n\nExample 2:\nREQUIREMENT: In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.\nSYMBOLIC: &obligatory{inform_controller_changes} :- role(processor), general_written_authorization.\nPREDICATES: role(processor); general_written_authorization; inform_controller_changes\nCLAUSE: Notifications made pursuant to this section will describe, to the extent possible, details of the Data Incident, including steps taken to mitigate the potential risks and steps processor recommends controller take to address the Data Incident.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.\nSYMBOLIC: &obligatory{inform_controller_changes} :- role(processor), general_written_authorization.\nPREDICATES: role(processor); general_written_authorization; inform_controller_changes\nCLAUSE: the participants in a room and is encrypted (DTLS-SRTP) with client-generated encryption keys.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.\nSYMBOLIC: &obligatory{inform_controller_changes} :- role(processor), general_written_authorization.\nPREDICATES: role(processor); general_written_authorization; inform_controller_changes\nCLAUSE: processor will process personal data to a standard of protection in accordance with the Data Protection Legislation.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.\nSYMBOLIC: &obligatory{inform_controller_changes} :- role(processor), general_written_authorization.\nPREDICATES: role(processor); general_written_authorization; inform_controller_changes\nCLAUSE: It will register with the DPC in accordance with the Applicable Data Protection law and do all things necessary to comply with the Applicable Data Protection law and be responsible in accordance with law, both statutory and common law to Data Subjects for any infringement of privacy or disclosure arising from its negligence, howsoever caused.\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.\nSYMBOLIC: &obligatory{inform_controller_changes} :- role(processor), general_written_authorization.\nPREDICATES: role(processor); general_written_authorization; inform_controller_changes\nCLAUSE: The processor will engage sub-processors without seeking any authorization from the controller.\nExpected output: -inform_controller_changes; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.",
        "symbolic": "&obligatory{inform_controller_changes} :- role(processor), general_written_authorization.",
        "predicates": "role(processor); general_written_authorization; inform_controller_changes",
        "clause": "The data processor shall inform in writing the data controller of any intended",
        "expected_output": "role(processor); general_written_authorization; inform_controller_changes",
        "dpa_source": "Online 122"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.",
        "symbolic": "&obligatory{inform_controller_changes} :- role(processor), general_written_authorization.",
        "predicates": "role(processor); general_written_authorization; inform_controller_changes",
        "clause": "Notifications made pursuant to this section will describe, to the extent possible, details of the Data Incident, including steps taken to mitigate the potential risks and steps processor recommends controller take to address the Data Incident.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 13"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.",
        "symbolic": "&obligatory{inform_controller_changes} :- role(processor), general_written_authorization.",
        "predicates": "role(processor); general_written_authorization; inform_controller_changes",
        "clause": "the participants in a room and is encrypted (DTLS-SRTP) with client-generated encryption keys.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 122"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.",
        "symbolic": "&obligatory{inform_controller_changes} :- role(processor), general_written_authorization.",
        "predicates": "role(processor); general_written_authorization; inform_controller_changes",
        "clause": "processor will process personal data to a standard of protection in accordance with the Data Protection Legislation.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 8"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.",
        "symbolic": "&obligatory{inform_controller_changes} :- role(processor), general_written_authorization.",
        "predicates": "role(processor); general_written_authorization; inform_controller_changes",
        "clause": "It will register with the DPC in accordance with the Applicable Data Protection law and do all things necessary to comply with the Applicable Data Protection law and be responsible in accordance with law, both statutory and common law to Data Subjects for any infringement of privacy or disclosure arising from its negligence, howsoever caused.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 61"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.",
        "symbolic": "&obligatory{inform_controller_changes} :- role(processor), general_written_authorization.",
        "predicates": "role(processor); general_written_authorization; inform_controller_changes",
        "clause": "The processor will engage sub-processors without seeking any authorization from the controller.",
        "expected_output": "-inform_controller_changes; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "In case of general written authorization, the processor shall inform the controller of any intended changes concerning the addition or replacement of sub-processors.",
    "requirement_symbolic": "&obligatory{inform_controller_changes} :- role(processor), general_written_authorization.",
    "examples_count": {
      "satisfying": 64,
      "no_facts": 8998,
      "partial": 4175
    }
  },
  "3": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall process personal data only on documented instructions from the controller.\nSYMBOLIC: &obligatory{process_data_on_documented_instructions} :- role(processor).\nPREDICATES: role(processor); process_data_on_documented_instructions\nCLAUSE: Personal Data will be Processed solely in accordance with the terms of the Agreement and any related instructions provided by controller.\nExpected output: role(processor); process_data_on_documented_instructions\n\nExample 2:\nREQUIREMENT: The processor shall process personal data only on documented instructions from the controller.\nSYMBOLIC: &obligatory{process_data_on_documented_instructions} :- role(processor).\nPREDICATES: role(processor); process_data_on_documented_instructions\nCLAUSE: take all measures required of Processor pursuant to Article 32 of the GDPR; where Citrix acts as Processor, the measures required are described in Exhibit 2 below, \u201cCitrix Services Security Exhibit\u201d;\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall process personal data only on documented instructions from the controller.\nSYMBOLIC: &obligatory{process_data_on_documented_instructions} :- role(processor).\nPREDICATES: role(processor); process_data_on_documented_instructions\nCLAUSE: The Processor and/or Wolters Kluwer group shall impose the same data protection obligations as set out in this DPA on any Sub-processor by contract.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall process personal data only on documented instructions from the controller.\nSYMBOLIC: &obligatory{process_data_on_documented_instructions} :- role(processor).\nPREDICATES: role(processor); process_data_on_documented_instructions\nCLAUSE: processor will not retain, use or disclose Personal Information for any purpose other than for the specific purpose of providing the Services to controller.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall process personal data only on documented instructions from the controller.\nSYMBOLIC: &obligatory{process_data_on_documented_instructions} :- role(processor).\nPREDICATES: role(processor); process_data_on_documented_instructions\nCLAUSE: To send promptly a copy of any Subprocessor agreement it concludes under the Clauses to the controller.\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall process personal data only on documented instructions from the controller.\nSYMBOLIC: &obligatory{process_data_on_documented_instructions} :- role(processor).\nPREDICATES: role(processor); process_data_on_documented_instructions\nCLAUSE: The processor will process personal data according to its own internal procedures without following controller instructions.\nExpected output: -process_data_on_documented_instructions; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall process personal data only on documented instructions from the controller.",
        "symbolic": "&obligatory{process_data_on_documented_instructions} :- role(processor).",
        "predicates": "role(processor); process_data_on_documented_instructions",
        "clause": "Personal Data will be Processed solely in accordance with the terms of the Agreement and any related instructions provided by controller.",
        "expected_output": "role(processor); process_data_on_documented_instructions",
        "dpa_source": "Online 100"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall process personal data only on documented instructions from the controller.",
        "symbolic": "&obligatory{process_data_on_documented_instructions} :- role(processor).",
        "predicates": "role(processor); process_data_on_documented_instructions",
        "clause": "take all measures required of Processor pursuant to Article 32 of the GDPR; where Citrix acts as Processor, the measures required are described in Exhibit 2 below, \u201cCitrix Services Security Exhibit\u201d;",
        "expected_output": "role(processor)",
        "dpa_source": "Online 11"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall process personal data only on documented instructions from the controller.",
        "symbolic": "&obligatory{process_data_on_documented_instructions} :- role(processor).",
        "predicates": "role(processor); process_data_on_documented_instructions",
        "clause": "The Processor and/or Wolters Kluwer group shall impose the same data protection obligations as set out in this DPA on any Sub-processor by contract.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 127"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall process personal data only on documented instructions from the controller.",
        "symbolic": "&obligatory{process_data_on_documented_instructions} :- role(processor).",
        "predicates": "role(processor); process_data_on_documented_instructions",
        "clause": "processor will not retain, use or disclose Personal Information for any purpose other than for the specific purpose of providing the Services to controller.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 138"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall process personal data only on documented instructions from the controller.",
        "symbolic": "&obligatory{process_data_on_documented_instructions} :- role(processor).",
        "predicates": "role(processor); process_data_on_documented_instructions",
        "clause": "To send promptly a copy of any Subprocessor agreement it concludes under the Clauses to the controller.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 139"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall process personal data only on documented instructions from the controller.",
        "symbolic": "&obligatory{process_data_on_documented_instructions} :- role(processor).",
        "predicates": "role(processor); process_data_on_documented_instructions",
        "clause": "The processor will process personal data according to its own internal procedures without following controller instructions.",
        "expected_output": "-process_data_on_documented_instructions; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall process personal data only on documented instructions from the controller.",
    "requirement_symbolic": "&obligatory{process_data_on_documented_instructions} :- role(processor).",
    "examples_count": {
      "satisfying": 115,
      "no_facts": 8998,
      "partial": 4124
    }
  },
  "4": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.\nSYMBOLIC: &obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.\nPREDICATES: role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement\nCLAUSE: to process the personal data only on behalf of the controller and in compliance with its instructions and the Clauses; if it cannot provide such compliance for whatever reasons, it agrees to inform promptly the controller of its inability to comply, in which case the controller is entitled to suspend the transfer of data and/or terminate the contract;\nExpected output: role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement\n\nExample 2:\nREQUIREMENT: If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.\nSYMBOLIC: &obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.\nPREDICATES: role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement\nCLAUSE: To the extent processor is required under applicable Data Protection Laws, processor will provide reasonably requested information regarding the Service to enable the controller to carry out data protection impact assessments or prior consultations with data protection authorities as required by law or pursuant to Articles 35 and 36 or GDPR, respectively.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.\nSYMBOLIC: &obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.\nPREDICATES: role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement\nCLAUSE: processor, being the data processor pursuant to the Regulation, shall, and ensures that its related employees shall, process the Personal Data exclusively on behalf of controller, as is necessary for processor to perform its obligations under the Agreement and in accordance with controller\u2019s Instructions, unless as far as otherwise required by applicable law.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.\nSYMBOLIC: &obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.\nPREDICATES: role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement\nCLAUSE: The transferred Personal Data concerns the following categories of data:\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.\nSYMBOLIC: &obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.\nPREDICATES: role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement\nCLAUSE: Security\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.\nSYMBOLIC: &obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.\nPREDICATES: role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement\nCLAUSE: The processor will not notify the controller of any data processing issues or legal requirements.\nExpected output: -inform_legal_requirement; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.",
        "symbolic": "&obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.",
        "predicates": "role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement",
        "clause": "to process the personal data only on behalf of the controller and in compliance with its instructions and the Clauses; if it cannot provide such compliance for whatever reasons, it agrees to inform promptly the controller of its inability to comply, in which case the controller is entitled to suspend the transfer of data and/or terminate the contract;",
        "expected_output": "role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement",
        "dpa_source": "Online 79"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.",
        "symbolic": "&obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.",
        "predicates": "role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement",
        "clause": "To the extent processor is required under applicable Data Protection Laws, processor will provide reasonably requested information regarding the Service to enable the controller to carry out data protection impact assessments or prior consultations with data protection authorities as required by law or pursuant to Articles 35 and 36 or GDPR, respectively.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 108"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.",
        "symbolic": "&obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.",
        "predicates": "role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement",
        "clause": "processor, being the data processor pursuant to the Regulation, shall, and ensures that its related employees shall, process the Personal Data exclusively on behalf of controller, as is necessary for processor to perform its obligations under the Agreement and in accordance with controller\u2019s Instructions, unless as far as otherwise required by applicable law.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 3"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.",
        "symbolic": "&obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.",
        "predicates": "role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement",
        "clause": "The transferred Personal Data concerns the following categories of data:",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 87"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.",
        "symbolic": "&obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.",
        "predicates": "role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement",
        "clause": "Security",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 126"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.",
        "symbolic": "&obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.",
        "predicates": "role(processor); required_by_law; prohibited_informing_public_interest; inform_legal_requirement",
        "clause": "The processor will not notify the controller of any data processing issues or legal requirements.",
        "expected_output": "-inform_legal_requirement; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "If the processor is required by Union or Member-State law to process personal data without instructions and such law does not prohibit informing the controller on grounds of public interest, the processor shall inform the controller of that legal requirement before processing.",
    "requirement_symbolic": "&obligatory{inform_legal_requirement} :- role(processor), required_by_law, not prohibited_informing_public_interest.",
    "examples_count": {
      "satisfying": 40,
      "no_facts": 8998,
      "partial": 4199
    }
  },
  "5": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall ensure that persons authorised to process personal data are bound by confidentiality.\nSYMBOLIC: &obligatory{ensure_confidentiality_commitment} :- role(processor).\nPREDICATES: role(processor); ensure_confidentiality_commitment\nCLAUSE: processor commits to observe any and all other duties that imposed to processors pursuant to Article 28 GDPR\nExpected output: role(processor); ensure_confidentiality_commitment\n\nExample 2:\nREQUIREMENT: The processor shall ensure that persons authorised to process personal data are bound by confidentiality.\nSYMBOLIC: &obligatory{ensure_confidentiality_commitment} :- role(processor).\nPREDICATES: role(processor); ensure_confidentiality_commitment\nCLAUSE: assist the controller, with the implementation of appropriate technical and organizational measures in order to respond to applications by Data Subjects for the exercise of their rights (in particular Art.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall ensure that persons authorised to process personal data are bound by confidentiality.\nSYMBOLIC: &obligatory{ensure_confidentiality_commitment} :- role(processor).\nPREDICATES: role(processor); ensure_confidentiality_commitment\nCLAUSE: Changed at least every 90 days;\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall ensure that persons authorised to process personal data are bound by confidentiality.\nSYMBOLIC: &obligatory{ensure_confidentiality_commitment} :- role(processor).\nPREDICATES: role(processor); ensure_confidentiality_commitment\nCLAUSE: ISO 27018 - Protection of Personal Data in Public Clouds, Acting as Personal Data Processors A.8 - Openness, transparency, and notice A.8 - Openness, transparency, and notice \nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall ensure that persons authorised to process personal data are bound by confidentiality.\nSYMBOLIC: &obligatory{ensure_confidentiality_commitment} :- role(processor).\nPREDICATES: role(processor); ensure_confidentiality_commitment\nCLAUSE: The definition of \u201cprocessor\u201d includes a business operator entrusted by the Business Operator with the handling of personal data in whole or in part (also a \u201ctrustee\u201d).\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall ensure that persons authorised to process personal data are bound by confidentiality.\nSYMBOLIC: &obligatory{ensure_confidentiality_commitment} :- role(processor).\nPREDICATES: role(processor); ensure_confidentiality_commitment\nCLAUSE: The processor allows all staff members to access personal data without any confidentiality agreements.\nExpected output: -ensure_confidentiality_commitment; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall ensure that persons authorised to process personal data are bound by confidentiality.",
        "symbolic": "&obligatory{ensure_confidentiality_commitment} :- role(processor).",
        "predicates": "role(processor); ensure_confidentiality_commitment",
        "clause": "processor commits to observe any and all other duties that imposed to processors pursuant to Article 28 GDPR",
        "expected_output": "role(processor); ensure_confidentiality_commitment",
        "dpa_source": "Online 90"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall ensure that persons authorised to process personal data are bound by confidentiality.",
        "symbolic": "&obligatory{ensure_confidentiality_commitment} :- role(processor).",
        "predicates": "role(processor); ensure_confidentiality_commitment",
        "clause": "assist the controller, with the implementation of appropriate technical and organizational measures in order to respond to applications by Data Subjects for the exercise of their rights (in particular Art.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 90"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall ensure that persons authorised to process personal data are bound by confidentiality.",
        "symbolic": "&obligatory{ensure_confidentiality_commitment} :- role(processor).",
        "predicates": "role(processor); ensure_confidentiality_commitment",
        "clause": "Changed at least every 90 days;",
        "expected_output": "role(processor)",
        "dpa_source": "Online 5"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall ensure that persons authorised to process personal data are bound by confidentiality.",
        "symbolic": "&obligatory{ensure_confidentiality_commitment} :- role(processor).",
        "predicates": "role(processor); ensure_confidentiality_commitment",
        "clause": "ISO 27018 - Protection of Personal Data in Public Clouds, Acting as Personal Data Processors A.8 - Openness, transparency, and notice A.8 - Openness, transparency, and notice ",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 67"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall ensure that persons authorised to process personal data are bound by confidentiality.",
        "symbolic": "&obligatory{ensure_confidentiality_commitment} :- role(processor).",
        "predicates": "role(processor); ensure_confidentiality_commitment",
        "clause": "The definition of \u201cprocessor\u201d includes a business operator entrusted by the Business Operator with the handling of personal data in whole or in part (also a \u201ctrustee\u201d).",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 8"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall ensure that persons authorised to process personal data are bound by confidentiality.",
        "symbolic": "&obligatory{ensure_confidentiality_commitment} :- role(processor).",
        "predicates": "role(processor); ensure_confidentiality_commitment",
        "clause": "The processor allows all staff members to access personal data without any confidentiality agreements.",
        "expected_output": "-ensure_confidentiality_commitment; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall ensure that persons authorised to process personal data are bound by confidentiality.",
    "requirement_symbolic": "&obligatory{ensure_confidentiality_commitment} :- role(processor).",
    "examples_count": {
      "satisfying": 86,
      "no_facts": 8998,
      "partial": 4153
    }
  },
  "6": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.\nSYMBOLIC: &obligatory{ensure_security_of_processing} :- role(processor).\nPREDICATES: role(processor); ensure_security_of_processing\nCLAUSE: All critical system access is removed immediately upon notification.\nExpected output: role(processor); ensure_security_of_processing\n\nExample 2:\nREQUIREMENT: The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.\nSYMBOLIC: &obligatory{ensure_security_of_processing} :- role(processor).\nPREDICATES: role(processor); ensure_security_of_processing\nCLAUSE: processor will maintain an information security program (including the adoption and enforcement of internal policies and procedures) designed to (a) help controller secure controller Data against accidental or unlawful loss, access or disclosure, (b) identify reasonably foreseeable and internal risks to security and unauthorised access to the processor Network, and (c) minimise security risks, including through risk assessment and regular testing.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.\nSYMBOLIC: &obligatory{ensure_security_of_processing} :- role(processor).\nPREDICATES: role(processor); ensure_security_of_processing\nCLAUSE: All processor employees and contractual subprocessors or other service providers are contractually bound to respect the confidentiality of all sensitive information including trade secrets of processor controllers and partners.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.\nSYMBOLIC: &obligatory{ensure_security_of_processing} :- role(processor).\nPREDICATES: role(processor); ensure_security_of_processing\nCLAUSE: At controller\u2019s request, and to the extent permitted by law, processor will provide controller with reasonable information in its possession that may be responsive to the Demand and any assistance reasonably required for controller to respond to the demand in a timely manner.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.\nSYMBOLIC: &obligatory{ensure_security_of_processing} :- role(processor).\nPREDICATES: role(processor); ensure_security_of_processing\nCLAUSE: This agreement is governed by Dutch law.\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.\nSYMBOLIC: &obligatory{ensure_security_of_processing} :- role(processor).\nPREDICATES: role(processor); ensure_security_of_processing\nCLAUSE: The processor stores all personal data in unencrypted plain text files.\nExpected output: -ensure_security_of_processing; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.",
        "symbolic": "&obligatory{ensure_security_of_processing} :- role(processor).",
        "predicates": "role(processor); ensure_security_of_processing",
        "clause": "All critical system access is removed immediately upon notification.",
        "expected_output": "role(processor); ensure_security_of_processing",
        "dpa_source": "Online 66"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.",
        "symbolic": "&obligatory{ensure_security_of_processing} :- role(processor).",
        "predicates": "role(processor); ensure_security_of_processing",
        "clause": "processor will maintain an information security program (including the adoption and enforcement of internal policies and procedures) designed to (a) help controller secure controller Data against accidental or unlawful loss, access or disclosure, (b) identify reasonably foreseeable and internal risks to security and unauthorised access to the processor Network, and (c) minimise security risks, including through risk assessment and regular testing.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 1"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.",
        "symbolic": "&obligatory{ensure_security_of_processing} :- role(processor).",
        "predicates": "role(processor); ensure_security_of_processing",
        "clause": "All processor employees and contractual subprocessors or other service providers are contractually bound to respect the confidentiality of all sensitive information including trade secrets of processor controllers and partners.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 87"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.",
        "symbolic": "&obligatory{ensure_security_of_processing} :- role(processor).",
        "predicates": "role(processor); ensure_security_of_processing",
        "clause": "At controller\u2019s request, and to the extent permitted by law, processor will provide controller with reasonable information in its possession that may be responsive to the Demand and any assistance reasonably required for controller to respond to the demand in a timely manner.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 13"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.",
        "symbolic": "&obligatory{ensure_security_of_processing} :- role(processor).",
        "predicates": "role(processor); ensure_security_of_processing",
        "clause": "This agreement is governed by Dutch law.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 54"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.",
        "symbolic": "&obligatory{ensure_security_of_processing} :- role(processor).",
        "predicates": "role(processor); ensure_security_of_processing",
        "clause": "The processor stores all personal data in unencrypted plain text files.",
        "expected_output": "-ensure_security_of_processing; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall take all measures required pursuant to Article 32 to ensure the security of processing.",
    "requirement_symbolic": "&obligatory{ensure_security_of_processing} :- role(processor).",
    "examples_count": {
      "satisfying": 1068,
      "no_facts": 8998,
      "partial": 3171
    }
  },
  "7": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.\nSYMBOLIC: &obligatory{assist_controller_requests_data_subject_rights} :- role(processor).\nPREDICATES: role(processor); assist_controller_requests_data_subject_rights\nCLAUSE: (ii) such assistance as is reasonably requested by controller to enable controller to comply with a Data Subject Access Request within the relevant timescales set out in the Data Protection Legislation;\nExpected output: role(processor); assist_controller_requests_data_subject_rights\n\nExample 2:\nREQUIREMENT: The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.\nSYMBOLIC: &obligatory{assist_controller_requests_data_subject_rights} :- role(processor).\nPREDICATES: role(processor); assist_controller_requests_data_subject_rights\nCLAUSE: In the event of a Data Breach, Processor shall provide the Controller with a description of the nature of the data breach and the affected Controller Personal Data and shall provide Controller with all reasonable assistance in relation to making a notification to a Supervisory Authority or any communication to Data Subject upon Customer\u2019s request as required under Applicable Data Protection Laws.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.\nSYMBOLIC: &obligatory{assist_controller_requests_data_subject_rights} :- role(processor).\nPREDICATES: role(processor); assist_controller_requests_data_subject_rights\nCLAUSE: Authorized access throughout the business operations and data centers is restricted based on zones and the individual\u2019s job responsibilities.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.\nSYMBOLIC: &obligatory{assist_controller_requests_data_subject_rights} :- role(processor).\nPREDICATES: role(processor); assist_controller_requests_data_subject_rights\nCLAUSE: release, correct or block access to Personal Data.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.\nSYMBOLIC: &obligatory{assist_controller_requests_data_subject_rights} :- role(processor).\nPREDICATES: role(processor); assist_controller_requests_data_subject_rights\nCLAUSE: The controller agrees to deposit a copy of this contract with the supervisory authority if it so requests or if such deposit is required under the applicable data protection law.\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.\nSYMBOLIC: &obligatory{assist_controller_requests_data_subject_rights} :- role(processor).\nPREDICATES: role(processor); assist_controller_requests_data_subject_rights\nCLAUSE: The processor refuses to provide any assistance to the controller regarding data subject requests.\nExpected output: -assist_controller_requests_data_subject_rights; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.",
        "symbolic": "&obligatory{assist_controller_requests_data_subject_rights} :- role(processor).",
        "predicates": "role(processor); assist_controller_requests_data_subject_rights",
        "clause": "(ii) such assistance as is reasonably requested by controller to enable controller to comply with a Data Subject Access Request within the relevant timescales set out in the Data Protection Legislation;",
        "expected_output": "role(processor); assist_controller_requests_data_subject_rights",
        "dpa_source": "Online 77"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.",
        "symbolic": "&obligatory{assist_controller_requests_data_subject_rights} :- role(processor).",
        "predicates": "role(processor); assist_controller_requests_data_subject_rights",
        "clause": "In the event of a Data Breach, Processor shall provide the Controller with a description of the nature of the data breach and the affected Controller Personal Data and shall provide Controller with all reasonable assistance in relation to making a notification to a Supervisory Authority or any communication to Data Subject upon Customer\u2019s request as required under Applicable Data Protection Laws.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 17"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.",
        "symbolic": "&obligatory{assist_controller_requests_data_subject_rights} :- role(processor).",
        "predicates": "role(processor); assist_controller_requests_data_subject_rights",
        "clause": "Authorized access throughout the business operations and data centers is restricted based on zones and the individual\u2019s job responsibilities.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 139"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.",
        "symbolic": "&obligatory{assist_controller_requests_data_subject_rights} :- role(processor).",
        "predicates": "role(processor); assist_controller_requests_data_subject_rights",
        "clause": "release, correct or block access to Personal Data.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 13"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.",
        "symbolic": "&obligatory{assist_controller_requests_data_subject_rights} :- role(processor).",
        "predicates": "role(processor); assist_controller_requests_data_subject_rights",
        "clause": "The controller agrees to deposit a copy of this contract with the supervisory authority if it so requests or if such deposit is required under the applicable data protection law.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 138"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.",
        "symbolic": "&obligatory{assist_controller_requests_data_subject_rights} :- role(processor).",
        "predicates": "role(processor); assist_controller_requests_data_subject_rights",
        "clause": "The processor refuses to provide any assistance to the controller regarding data subject requests.",
        "expected_output": "-assist_controller_requests_data_subject_rights; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall assist the controller in fulfilling its obligation to respond to requests for exercising the data-subject\u2019s rights.",
    "requirement_symbolic": "&obligatory{assist_controller_requests_data_subject_rights} :- role(processor).",
    "examples_count": {
      "satisfying": 147,
      "no_facts": 8998,
      "partial": 4092
    }
  },
  "8": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall assist the controller in ensuring the security of processing.\nSYMBOLIC: &obligatory{assist_controller_security} :- role(processor).\nPREDICATES: role(processor); assist_controller_security\nCLAUSE: In his area of responsibility, processor will design the in-house organization in such a way that it meets the special data protection requirements.\nExpected output: role(processor); assist_controller_security\n\nExample 2:\nREQUIREMENT: The processor shall assist the controller in ensuring the security of processing.\nSYMBOLIC: &obligatory{assist_controller_security} :- role(processor).\nPREDICATES: role(processor); assist_controller_security\nCLAUSE: The Parties shall keep all Personal Data confidential and shall not disclose them in any way, either internally or externally, except in so far as:\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall assist the controller in ensuring the security of processing.\nSYMBOLIC: &obligatory{assist_controller_security} :- role(processor).\nPREDICATES: role(processor); assist_controller_security\nCLAUSE: Notification(s) of any Data Incident(s) will be delivered to the Notification Email Address or, at processor\u2019s discretion, by direct communication (for example, by phone call or an in-person meeting).\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall assist the controller in ensuring the security of processing.\nSYMBOLIC: &obligatory{assist_controller_security} :- role(processor).\nPREDICATES: role(processor); assist_controller_security\nCLAUSE: Nothing in this Agreement shall prevent either Party from com- plying with any legal obligation imposed by a regulator or court.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall assist the controller in ensuring the security of processing.\nSYMBOLIC: &obligatory{assist_controller_security} :- role(processor).\nPREDICATES: role(processor); assist_controller_security\nCLAUSE: \u2018the controller\u2019 means the controller who transfers the personal data;\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall assist the controller in ensuring the security of processing.\nSYMBOLIC: &obligatory{assist_controller_security} :- role(processor).\nPREDICATES: role(processor); assist_controller_security\nCLAUSE: The processor stores all personal data in unencrypted plain text files.\nExpected output: -assist_controller_security; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall assist the controller in ensuring the security of processing.",
        "symbolic": "&obligatory{assist_controller_security} :- role(processor).",
        "predicates": "role(processor); assist_controller_security",
        "clause": "In his area of responsibility, processor will design the in-house organization in such a way that it meets the special data protection requirements.",
        "expected_output": "role(processor); assist_controller_security",
        "dpa_source": "Online 97"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall assist the controller in ensuring the security of processing.",
        "symbolic": "&obligatory{assist_controller_security} :- role(processor).",
        "predicates": "role(processor); assist_controller_security",
        "clause": "The Parties shall keep all Personal Data confidential and shall not disclose them in any way, either internally or externally, except in so far as:",
        "expected_output": "role(processor)",
        "dpa_source": "Online 71"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall assist the controller in ensuring the security of processing.",
        "symbolic": "&obligatory{assist_controller_security} :- role(processor).",
        "predicates": "role(processor); assist_controller_security",
        "clause": "Notification(s) of any Data Incident(s) will be delivered to the Notification Email Address or, at processor\u2019s discretion, by direct communication (for example, by phone call or an in-person meeting).",
        "expected_output": "role(processor)",
        "dpa_source": "Online 13"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall assist the controller in ensuring the security of processing.",
        "symbolic": "&obligatory{assist_controller_security} :- role(processor).",
        "predicates": "role(processor); assist_controller_security",
        "clause": "Nothing in this Agreement shall prevent either Party from com- plying with any legal obligation imposed by a regulator or court.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 117"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall assist the controller in ensuring the security of processing.",
        "symbolic": "&obligatory{assist_controller_security} :- role(processor).",
        "predicates": "role(processor); assist_controller_security",
        "clause": "\u2018the controller\u2019 means the controller who transfers the personal data;",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 52"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall assist the controller in ensuring the security of processing.",
        "symbolic": "&obligatory{assist_controller_security} :- role(processor).",
        "predicates": "role(processor); assist_controller_security",
        "clause": "The processor stores all personal data in unencrypted plain text files.",
        "expected_output": "-assist_controller_security; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall assist the controller in ensuring the security of processing.",
    "requirement_symbolic": "&obligatory{assist_controller_security} :- role(processor).",
    "examples_count": {
      "satisfying": 27,
      "no_facts": 8998,
      "partial": 4212
    }
  },
  "9": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.\nSYMBOLIC: &obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.\nPREDICATES: role(processor); data_breach; assist_notification_supervisory_authority\nCLAUSE: to make due notification (where required by applicable Data Protection Legislation) to the Regulator, including in relation to its use and Processing of the Personal Data and comply at all times with the Data Protection Legislation; \nExpected output: role(processor); data_breach; assist_notification_supervisory_authority\n\nExample 2:\nREQUIREMENT: The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.\nSYMBOLIC: &obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.\nPREDICATES: role(processor); data_breach; assist_notification_supervisory_authority\nCLAUSE: the patients registered with the controller)\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.\nSYMBOLIC: &obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.\nPREDICATES: role(processor); data_breach; assist_notification_supervisory_authority\nCLAUSE: as soon as reasonably practicable upon becoming aware, inform controller if, in processor\u2019s opinion, an instruction from controller infringes the GDPR or other Applicable Data Protection Laws;\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.\nSYMBOLIC: &obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.\nPREDICATES: role(processor); data_breach; assist_notification_supervisory_authority\nCLAUSE: Controller shall be responsible for compliance with applicable data protection laws.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.\nSYMBOLIC: &obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.\nPREDICATES: role(processor); data_breach; assist_notification_supervisory_authority\nCLAUSE: Technical Support  14.1 The Technical Support provided by processor to controller normally does not require and therefore shall not include processing of Personal Data.\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.\nSYMBOLIC: &obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.\nPREDICATES: role(processor); data_breach; assist_notification_supervisory_authority\nCLAUSE: The processor refuses to provide any assistance to the controller regarding data subject requests.\nExpected output: -assist_notification_supervisory_authority; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.",
        "symbolic": "&obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.",
        "predicates": "role(processor); data_breach; assist_notification_supervisory_authority",
        "clause": "to make due notification (where required by applicable Data Protection Legislation) to the Regulator, including in relation to its use and Processing of the Personal Data and comply at all times with the Data Protection Legislation; ",
        "expected_output": "role(processor); data_breach; assist_notification_supervisory_authority",
        "dpa_source": "Online 119"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.",
        "symbolic": "&obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.",
        "predicates": "role(processor); data_breach; assist_notification_supervisory_authority",
        "clause": "the patients registered with the controller)",
        "expected_output": "role(processor)",
        "dpa_source": "Online 75"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.",
        "symbolic": "&obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.",
        "predicates": "role(processor); data_breach; assist_notification_supervisory_authority",
        "clause": "as soon as reasonably practicable upon becoming aware, inform controller if, in processor\u2019s opinion, an instruction from controller infringes the GDPR or other Applicable Data Protection Laws;",
        "expected_output": "role(processor)",
        "dpa_source": "Online 74"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.",
        "symbolic": "&obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.",
        "predicates": "role(processor); data_breach; assist_notification_supervisory_authority",
        "clause": "Controller shall be responsible for compliance with applicable data protection laws.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 85"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.",
        "symbolic": "&obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.",
        "predicates": "role(processor); data_breach; assist_notification_supervisory_authority",
        "clause": "Technical Support  14.1 The Technical Support provided by processor to controller normally does not require and therefore shall not include processing of Personal Data.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 15"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.",
        "symbolic": "&obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.",
        "predicates": "role(processor); data_breach; assist_notification_supervisory_authority",
        "clause": "The processor refuses to provide any assistance to the controller regarding data subject requests.",
        "expected_output": "-assist_notification_supervisory_authority; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall assist the controller in notifying a personal-data breach to the supervisory authority.",
    "requirement_symbolic": "&obligatory{assist_notification_supervisory_authority} :- role(processor), data_breach.",
    "examples_count": {
      "satisfying": 29,
      "no_facts": 8998,
      "partial": 4210
    }
  },
  "10": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall assist the controller in communicating a personal-data breach to the data subject.\nSYMBOLIC: &obligatory{assist_communication_data_subject} :- role(processor), data_breach.\nPREDICATES: role(processor); data_breach; assist_communication_data_subject\nCLAUSE: The processor will assist the controller in ensuring compliance with the obligations with regard to security of proces- sing; notification of a personal data breach to the supervisory au- thority; communication of a personal data breach to the Data Sub- ject; and data protection impact assessment.\nExpected output: role(processor); data_breach; assist_communication_data_subject\n\nExample 2:\nREQUIREMENT: The processor shall assist the controller in communicating a personal-data breach to the data subject.\nSYMBOLIC: &obligatory{assist_communication_data_subject} :- role(processor), data_breach.\nPREDICATES: role(processor); data_breach; assist_communication_data_subject\nCLAUSE: The processor tracks disclosures of customer data, including what data has been disclosed, to whom, and at what time.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall assist the controller in communicating a personal-data breach to the data subject.\nSYMBOLIC: &obligatory{assist_communication_data_subject} :- role(processor), data_breach.\nPREDICATES: role(processor); data_breach; assist_communication_data_subject\nCLAUSE: processor shall ensure that the processor personnel authorized to Process the Personal Data have committed themselves to confidentiality or are under an appropriate statutory obligation of confidentiality.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall assist the controller in communicating a personal-data breach to the data subject.\nSYMBOLIC: &obligatory{assist_communication_data_subject} :- role(processor), data_breach.\nPREDICATES: role(processor); data_breach; assist_communication_data_subject\nCLAUSE: The controller entity that is the contracting entity is responsible for coordinating all communication with us under the DPA and will be entitled to make and receive any communication related to this DPA on behalf of its Permitted Affiliates.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall assist the controller in communicating a personal-data breach to the data subject.\nSYMBOLIC: &obligatory{assist_communication_data_subject} :- role(processor), data_breach.\nPREDICATES: role(processor); data_breach; assist_communication_data_subject\nCLAUSE: The processor Incident Response Team ensures that the management responsibilities are allocated, and procedures are documented to ensure a quick, effective and orderly response to information security Information security incidents affecting processor products or controller data shall always be regarded high priority and escalated accordingly.\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall assist the controller in communicating a personal-data breach to the data subject.\nSYMBOLIC: &obligatory{assist_communication_data_subject} :- role(processor), data_breach.\nPREDICATES: role(processor); data_breach; assist_communication_data_subject\nCLAUSE: The processor refuses to provide any assistance to the controller regarding data subject requests.\nExpected output: -assist_communication_data_subject; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall assist the controller in communicating a personal-data breach to the data subject.",
        "symbolic": "&obligatory{assist_communication_data_subject} :- role(processor), data_breach.",
        "predicates": "role(processor); data_breach; assist_communication_data_subject",
        "clause": "The processor will assist the controller in ensuring compliance with the obligations with regard to security of proces- sing; notification of a personal data breach to the supervisory au- thority; communication of a personal data breach to the Data Sub- ject; and data protection impact assessment.",
        "expected_output": "role(processor); data_breach; assist_communication_data_subject",
        "dpa_source": "Online 117"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall assist the controller in communicating a personal-data breach to the data subject.",
        "symbolic": "&obligatory{assist_communication_data_subject} :- role(processor), data_breach.",
        "predicates": "role(processor); data_breach; assist_communication_data_subject",
        "clause": "The processor tracks disclosures of customer data, including what data has been disclosed, to whom, and at what time.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 126"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall assist the controller in communicating a personal-data breach to the data subject.",
        "symbolic": "&obligatory{assist_communication_data_subject} :- role(processor), data_breach.",
        "predicates": "role(processor); data_breach; assist_communication_data_subject",
        "clause": "processor shall ensure that the processor personnel authorized to Process the Personal Data have committed themselves to confidentiality or are under an appropriate statutory obligation of confidentiality.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 138"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall assist the controller in communicating a personal-data breach to the data subject.",
        "symbolic": "&obligatory{assist_communication_data_subject} :- role(processor), data_breach.",
        "predicates": "role(processor); data_breach; assist_communication_data_subject",
        "clause": "The controller entity that is the contracting entity is responsible for coordinating all communication with us under the DPA and will be entitled to make and receive any communication related to this DPA on behalf of its Permitted Affiliates.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 52"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall assist the controller in communicating a personal-data breach to the data subject.",
        "symbolic": "&obligatory{assist_communication_data_subject} :- role(processor), data_breach.",
        "predicates": "role(processor); data_breach; assist_communication_data_subject",
        "clause": "The processor Incident Response Team ensures that the management responsibilities are allocated, and procedures are documented to ensure a quick, effective and orderly response to information security Information security incidents affecting processor products or controller data shall always be regarded high priority and escalated accordingly.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 112"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall assist the controller in communicating a personal-data breach to the data subject.",
        "symbolic": "&obligatory{assist_communication_data_subject} :- role(processor), data_breach.",
        "predicates": "role(processor); data_breach; assist_communication_data_subject",
        "clause": "The processor refuses to provide any assistance to the controller regarding data subject requests.",
        "expected_output": "-assist_communication_data_subject; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall assist the controller in communicating a personal-data breach to the data subject.",
    "requirement_symbolic": "&obligatory{assist_communication_data_subject} :- role(processor), data_breach.",
    "examples_count": {
      "satisfying": 39,
      "no_facts": 8998,
      "partial": 4200
    }
  },
  "11": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.\nSYMBOLIC: &obligatory{assist_impact_assessment_compliance} :- role(processor).\nPREDICATES: role(processor); assist_impact_assessment_compliance\nCLAUSE: Shall take reasonable steps at the controller\u2019s request to assist controller in meeting controller\u2019s obligations under Article 32 to 36 of the GDPR taking into account the nature of the processing under this DPA; provided, however, that processor reserves the right to reimbursement from controller for the reasonable cost of any time, expenditures or fees incurred in connection with such assistance;\nExpected output: role(processor); assist_impact_assessment_compliance\n\nExample 2:\nREQUIREMENT: The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.\nSYMBOLIC: &obligatory{assist_impact_assessment_compliance} :- role(processor).\nPREDICATES: role(processor); assist_impact_assessment_compliance\nCLAUSE: A.11.10 User ID management De-activated or expired user IDs are not be granted to other individuals.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.\nSYMBOLIC: &obligatory{assist_impact_assessment_compliance} :- role(processor).\nPREDICATES: role(processor); assist_impact_assessment_compliance\nCLAUSE: the termination or expiry of the Primary Care Network Agreement; \nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.\nSYMBOLIC: &obligatory{assist_impact_assessment_compliance} :- role(processor).\nPREDICATES: role(processor); assist_impact_assessment_compliance\nCLAUSE: Special categories of data (if appropriate)\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.\nSYMBOLIC: &obligatory{assist_impact_assessment_compliance} :- role(processor).\nPREDICATES: role(processor); assist_impact_assessment_compliance\nCLAUSE: All other capitalized terms not defined in this Data Processing Agreement shall have the meanings ascribed to them in the respective Cloud License Agreement, as applicable.\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.\nSYMBOLIC: &obligatory{assist_impact_assessment_compliance} :- role(processor).\nPREDICATES: role(processor); assist_impact_assessment_compliance\nCLAUSE: The processor refuses to provide any assistance to the controller regarding data subject requests.\nExpected output: -assist_impact_assessment_compliance; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.",
        "symbolic": "&obligatory{assist_impact_assessment_compliance} :- role(processor).",
        "predicates": "role(processor); assist_impact_assessment_compliance",
        "clause": "Shall take reasonable steps at the controller\u2019s request to assist controller in meeting controller\u2019s obligations under Article 32 to 36 of the GDPR taking into account the nature of the processing under this DPA; provided, however, that processor reserves the right to reimbursement from controller for the reasonable cost of any time, expenditures or fees incurred in connection with such assistance;",
        "expected_output": "role(processor); assist_impact_assessment_compliance",
        "dpa_source": "Online 69"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.",
        "symbolic": "&obligatory{assist_impact_assessment_compliance} :- role(processor).",
        "predicates": "role(processor); assist_impact_assessment_compliance",
        "clause": "A.11.10 User ID management De-activated or expired user IDs are not be granted to other individuals.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 67"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.",
        "symbolic": "&obligatory{assist_impact_assessment_compliance} :- role(processor).",
        "predicates": "role(processor); assist_impact_assessment_compliance",
        "clause": "the termination or expiry of the Primary Care Network Agreement; ",
        "expected_output": "role(processor)",
        "dpa_source": "Online 76"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.",
        "symbolic": "&obligatory{assist_impact_assessment_compliance} :- role(processor).",
        "predicates": "role(processor); assist_impact_assessment_compliance",
        "clause": "Special categories of data (if appropriate)",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 79"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.",
        "symbolic": "&obligatory{assist_impact_assessment_compliance} :- role(processor).",
        "predicates": "role(processor); assist_impact_assessment_compliance",
        "clause": "All other capitalized terms not defined in this Data Processing Agreement shall have the meanings ascribed to them in the respective Cloud License Agreement, as applicable.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 135"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.",
        "symbolic": "&obligatory{assist_impact_assessment_compliance} :- role(processor).",
        "predicates": "role(processor); assist_impact_assessment_compliance",
        "clause": "The processor refuses to provide any assistance to the controller regarding data subject requests.",
        "expected_output": "-assist_impact_assessment_compliance; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall assist the controller in ensuring compliance with data-protection impact-assessment obligations.",
    "requirement_symbolic": "&obligatory{assist_impact_assessment_compliance} :- role(processor).",
    "examples_count": {
      "satisfying": 29,
      "no_facts": 8998,
      "partial": 4210
    }
  },
  "12": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.\nSYMBOLIC: &obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.\nPREDICATES: role(processor); high_risk_processing; assist_consulting_supervisory_authorities\nCLAUSE: before the start of the processing) checking according to data protection impact assessments pursuant to Art.\nExpected output: role(processor); high_risk_processing; assist_consulting_supervisory_authorities\n\nExample 2:\nREQUIREMENT: The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.\nSYMBOLIC: &obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.\nPREDICATES: role(processor); high_risk_processing; assist_consulting_supervisory_authorities\nCLAUSE: The Processor is committed to provide the Controller, upon request, with the information required to comply with his obligation to carry out inspections and to make the relevant documentation available.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.\nSYMBOLIC: &obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.\nPREDICATES: role(processor); high_risk_processing; assist_consulting_supervisory_authorities\nCLAUSE: 6.5\u00a0processor remains responsible at all times for compliance with the terms of this DPA by processor\u2019s Affiliates and Third-Party Sub-processors to the same extent processor would be liable if performing the services of each sub- processor directly under the terms of this DPA.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.\nSYMBOLIC: &obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.\nPREDICATES: role(processor); high_risk_processing; assist_consulting_supervisory_authorities\nCLAUSE: Data Subject means an individual to whom Personal Data, including Special Categories of Personal Data, pertains;\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.\nSYMBOLIC: &obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.\nPREDICATES: role(processor); high_risk_processing; assist_consulting_supervisory_authorities\nCLAUSE: The Data Subject can enforce against the controller this Clause, Clause 4(b) to (i), Clause 5(a) to (e), and (g) to (j), Clause 6(1) and (2), Clause 7, Clause 8(2), and Clauses 9 to 12 as third-party beneficiary.\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.\nSYMBOLIC: &obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.\nPREDICATES: role(processor); high_risk_processing; assist_consulting_supervisory_authorities\nCLAUSE: The processor refuses to provide any assistance to the controller regarding data subject requests.\nExpected output: -assist_consulting_supervisory_authorities; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.",
        "symbolic": "&obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.",
        "predicates": "role(processor); high_risk_processing; assist_consulting_supervisory_authorities",
        "clause": "before the start of the processing) checking according to data protection impact assessments pursuant to Art.",
        "expected_output": "role(processor); high_risk_processing; assist_consulting_supervisory_authorities",
        "dpa_source": "Online 90"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.",
        "symbolic": "&obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.",
        "predicates": "role(processor); high_risk_processing; assist_consulting_supervisory_authorities",
        "clause": "The Processor is committed to provide the Controller, upon request, with the information required to comply with his obligation to carry out inspections and to make the relevant documentation available.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 121"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.",
        "symbolic": "&obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.",
        "predicates": "role(processor); high_risk_processing; assist_consulting_supervisory_authorities",
        "clause": "6.5\u00a0processor remains responsible at all times for compliance with the terms of this DPA by processor\u2019s Affiliates and Third-Party Sub-processors to the same extent processor would be liable if performing the services of each sub- processor directly under the terms of this DPA.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 112"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.",
        "symbolic": "&obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.",
        "predicates": "role(processor); high_risk_processing; assist_consulting_supervisory_authorities",
        "clause": "Data Subject means an individual to whom Personal Data, including Special Categories of Personal Data, pertains;",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 132"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.",
        "symbolic": "&obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.",
        "predicates": "role(processor); high_risk_processing; assist_consulting_supervisory_authorities",
        "clause": "The Data Subject can enforce against the controller this Clause, Clause 4(b) to (i), Clause 5(a) to (e), and (g) to (j), Clause 6(1) and (2), Clause 7, Clause 8(2), and Clauses 9 to 12 as third-party beneficiary.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 139"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.",
        "symbolic": "&obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.",
        "predicates": "role(processor); high_risk_processing; assist_consulting_supervisory_authorities",
        "clause": "The processor refuses to provide any assistance to the controller regarding data subject requests.",
        "expected_output": "-assist_consulting_supervisory_authorities; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall assist the controller in consulting the supervisory authorities prior to processing where the processing would result in a high risk in the absence of measures taken by the controller to mitigate the risk.",
    "requirement_symbolic": "&obligatory{assist_consulting_supervisory_authorities} :- role(processor), high_risk_processing.",
    "examples_count": {
      "satisfying": 56,
      "no_facts": 8998,
      "partial": 4183
    }
  },
  "13": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.\nSYMBOLIC: &obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.\nPREDICATES: role(processor); end_of_services; return_or_delete_personal_data\nCLAUSE: At the choice of the controller, deletes or returns all the personal data to the controller after the end of the provision of services relating to processing, and deletes existing copies unless Union or Member State law requires storage of the personal data;\nExpected output: role(processor); end_of_services; return_or_delete_personal_data\n\nExample 2:\nREQUIREMENT: The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.\nSYMBOLIC: &obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.\nPREDICATES: role(processor); end_of_services; return_or_delete_personal_data\nCLAUSE: processor will comply with all such instructions to the extent necessary for processor to (i) comply with its Processor obligations under Applicable Data Protection Law; or (ii) assist controller to comply with controllerr Controller obligations under Applicable Data Protection Law relevant to controllerr use of the Cloud Services, including assistance with notifying Personal Data breaches as set forth in Section 11, Data Subject requests as set forth in Section 6, and Data Protection Impact Assessments (DPIAs).\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.\nSYMBOLIC: &obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.\nPREDICATES: role(processor); end_of_services; return_or_delete_personal_data\nCLAUSE: processor has implemented a multi-layered defense strategy as a protection against unauthorized modifications.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.\nSYMBOLIC: &obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.\nPREDICATES: role(processor); end_of_services; return_or_delete_personal_data\nCLAUSE: All processor Information processing facilities and product infrastructure are implemented with redundancy sufficient to meet 99,5% minimum annual uptime requirement.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.\nSYMBOLIC: &obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.\nPREDICATES: role(processor); end_of_services; return_or_delete_personal_data\nCLAUSE: DATA PROCESSING AGREEMENT FOR processor CLOUD SERVICES\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.\nSYMBOLIC: &obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.\nPREDICATES: role(processor); end_of_services; return_or_delete_personal_data\nCLAUSE: The processor will retain all personal data indefinitely after contract termination.\nExpected output: -return_or_delete_personal_data; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.",
        "symbolic": "&obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.",
        "predicates": "role(processor); end_of_services; return_or_delete_personal_data",
        "clause": "At the choice of the controller, deletes or returns all the personal data to the controller after the end of the provision of services relating to processing, and deletes existing copies unless Union or Member State law requires storage of the personal data;",
        "expected_output": "role(processor); end_of_services; return_or_delete_personal_data",
        "dpa_source": "Online 8"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.",
        "symbolic": "&obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.",
        "predicates": "role(processor); end_of_services; return_or_delete_personal_data",
        "clause": "processor will comply with all such instructions to the extent necessary for processor to (i) comply with its Processor obligations under Applicable Data Protection Law; or (ii) assist controller to comply with controllerr Controller obligations under Applicable Data Protection Law relevant to controllerr use of the Cloud Services, including assistance with notifying Personal Data breaches as set forth in Section 11, Data Subject requests as set forth in Section 6, and Data Protection Impact Assessments (DPIAs).",
        "expected_output": "role(processor)",
        "dpa_source": "Online 142"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.",
        "symbolic": "&obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.",
        "predicates": "role(processor); end_of_services; return_or_delete_personal_data",
        "clause": "processor has implemented a multi-layered defense strategy as a protection against unauthorized modifications.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 87"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.",
        "symbolic": "&obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.",
        "predicates": "role(processor); end_of_services; return_or_delete_personal_data",
        "clause": "All processor Information processing facilities and product infrastructure are implemented with redundancy sufficient to meet 99,5% minimum annual uptime requirement.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 112"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.",
        "symbolic": "&obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.",
        "predicates": "role(processor); end_of_services; return_or_delete_personal_data",
        "clause": "DATA PROCESSING AGREEMENT FOR processor CLOUD SERVICES",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 142"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.",
        "symbolic": "&obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.",
        "predicates": "role(processor); end_of_services; return_or_delete_personal_data",
        "clause": "The processor will retain all personal data indefinitely after contract termination.",
        "expected_output": "-return_or_delete_personal_data; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall return or delete all personal data to the controller after the end of the provision of services relating to processing.",
    "requirement_symbolic": "&obligatory{return_or_delete_personal_data} :- role(processor), end_of_services.",
    "examples_count": {
      "satisfying": 123,
      "no_facts": 8998,
      "partial": 4116
    }
  },
  "14": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.\nSYMBOLIC: &obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.\nPREDICATES: role(processor); instruction_infringes_law; inform_instruction_infringement\nCLAUSE: 2 GDPR if it believes that an instruction violates data protection regulations.\nExpected output: role(processor); instruction_infringes_law; inform_instruction_infringement\n\nExample 2:\nREQUIREMENT: The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.\nSYMBOLIC: &obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.\nPREDICATES: role(processor); instruction_infringes_law; inform_instruction_infringement\nCLAUSE: URL scanning for the purposes of the provision of targeted threat protection and similar service which may be provided under the Agreement.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.\nSYMBOLIC: &obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.\nPREDICATES: role(processor); instruction_infringes_law; inform_instruction_infringement\nCLAUSE: Access    to    networks  and network services Users are only provided with access to the network and network services if they have been specifically authorized to use such services.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.\nSYMBOLIC: &obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.\nPREDICATES: role(processor); instruction_infringes_law; inform_instruction_infringement\nCLAUSE: to make available to the data subjects upon request a copy of the Clauses, with the exception of Appendix 2, and a summary description of the security measures, as well as a copy of any contract for subprocessing services which has to be made in accordance with the Clauses, unless the Clauses or the contract contain commercial information, in which case it may remove such commercial information;\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.\nSYMBOLIC: &obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.\nPREDICATES: role(processor); instruction_infringes_law; inform_instruction_infringement\nCLAUSE: Documentation of compliance\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.\nSYMBOLIC: &obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.\nPREDICATES: role(processor); instruction_infringes_law; inform_instruction_infringement\nCLAUSE: The processor will not notify the controller of any data processing issues or legal requirements.\nExpected output: -inform_instruction_infringement; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.",
        "symbolic": "&obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.",
        "predicates": "role(processor); instruction_infringes_law; inform_instruction_infringement",
        "clause": "2 GDPR if it believes that an instruction violates data protection regulations.",
        "expected_output": "role(processor); instruction_infringes_law; inform_instruction_infringement",
        "dpa_source": "Online 121"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.",
        "symbolic": "&obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.",
        "predicates": "role(processor); instruction_infringes_law; inform_instruction_infringement",
        "clause": "URL scanning for the purposes of the provision of targeted threat protection and similar service which may be provided under the Agreement.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 78"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.",
        "symbolic": "&obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.",
        "predicates": "role(processor); instruction_infringes_law; inform_instruction_infringement",
        "clause": "Access    to    networks  and network services Users are only provided with access to the network and network services if they have been specifically authorized to use such services.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 67"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.",
        "symbolic": "&obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.",
        "predicates": "role(processor); instruction_infringes_law; inform_instruction_infringement",
        "clause": "to make available to the data subjects upon request a copy of the Clauses, with the exception of Appendix 2, and a summary description of the security measures, as well as a copy of any contract for subprocessing services which has to be made in accordance with the Clauses, unless the Clauses or the contract contain commercial information, in which case it may remove such commercial information;",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 68"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.",
        "symbolic": "&obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.",
        "predicates": "role(processor); instruction_infringes_law; inform_instruction_infringement",
        "clause": "Documentation of compliance",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 124"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.",
        "symbolic": "&obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.",
        "predicates": "role(processor); instruction_infringes_law; inform_instruction_infringement",
        "clause": "The processor will not notify the controller of any data processing issues or legal requirements.",
        "expected_output": "-inform_instruction_infringement; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall immediately inform the controller if an instruction infringes the GDPR or other data-protection provisions.",
    "requirement_symbolic": "&obligatory{inform_instruction_infringement} :- role(processor), instruction_infringes_law.",
    "examples_count": {
      "satisfying": 50,
      "no_facts": 8998,
      "partial": 4189
    }
  },
  "15": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.\nSYMBOLIC: &obligatory{provide_compliance_information} :- role(processor).\nPREDICATES: role(processor); provide_compliance_information\nCLAUSE: Processor will immediately inform the Controller if, in its opinion, an instruction from Controller infringes the GDPR or applicable national data protection laws, or if Processor believes that it cannot comply with any instruction or any requirements under this Data Processing Agreement.\nExpected output: role(processor); provide_compliance_information\n\nExample 2:\nREQUIREMENT: The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.\nSYMBOLIC: &obligatory{provide_compliance_information} :- role(processor).\nPREDICATES: role(processor); provide_compliance_information\nCLAUSE: The parties acknowledge that the data processor will be controller for some information comprising the providing of the services, such as contact details of the data controller, payment information and usage information (product and billing analytics, technical log data, device information) which is necessary for delivering the service to the data controller.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.\nSYMBOLIC: &obligatory{provide_compliance_information} :- role(processor).\nPREDICATES: role(processor); provide_compliance_information\nCLAUSE: Upon receipt of written notice from the controller or upon giving written notice of termination to the controller, the processor shall return any Data received from the controller to the controller forthwith.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.\nSYMBOLIC: &obligatory{provide_compliance_information} :- role(processor).\nPREDICATES: role(processor); provide_compliance_information\nCLAUSE: Where a data protection supervisory authority or another supervisory authority with statutory competence for controller conducts an inspection, para.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.\nSYMBOLIC: &obligatory{provide_compliance_information} :- role(processor).\nPREDICATES: role(processor); provide_compliance_information\nCLAUSE: The data subject can enforce against the controller this Clause, Clause 4(b) to (i), Clause 5(a) to (e), and (g) to (j), Clause 6(1) and (2), Clause 7, Clause 8(2), and Clauses 9 to 12 as third-party beneficiary.\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.\nSYMBOLIC: &obligatory{provide_compliance_information} :- role(processor).\nPREDICATES: role(processor); provide_compliance_information\nCLAUSE: The processor will not comply with this data protection requirement.\nExpected output: -provide_compliance_information; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.",
        "symbolic": "&obligatory{provide_compliance_information} :- role(processor).",
        "predicates": "role(processor); provide_compliance_information",
        "clause": "Processor will immediately inform the Controller if, in its opinion, an instruction from Controller infringes the GDPR or applicable national data protection laws, or if Processor believes that it cannot comply with any instruction or any requirements under this Data Processing Agreement.",
        "expected_output": "role(processor); provide_compliance_information",
        "dpa_source": "Online 68"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.",
        "symbolic": "&obligatory{provide_compliance_information} :- role(processor).",
        "predicates": "role(processor); provide_compliance_information",
        "clause": "The parties acknowledge that the data processor will be controller for some information comprising the providing of the services, such as contact details of the data controller, payment information and usage information (product and billing analytics, technical log data, device information) which is necessary for delivering the service to the data controller.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 122"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.",
        "symbolic": "&obligatory{provide_compliance_information} :- role(processor).",
        "predicates": "role(processor); provide_compliance_information",
        "clause": "Upon receipt of written notice from the controller or upon giving written notice of termination to the controller, the processor shall return any Data received from the controller to the controller forthwith.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 20"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.",
        "symbolic": "&obligatory{provide_compliance_information} :- role(processor).",
        "predicates": "role(processor); provide_compliance_information",
        "clause": "Where a data protection supervisory authority or another supervisory authority with statutory competence for controller conducts an inspection, para.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 4"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.",
        "symbolic": "&obligatory{provide_compliance_information} :- role(processor).",
        "predicates": "role(processor); provide_compliance_information",
        "clause": "The data subject can enforce against the controller this Clause, Clause 4(b) to (i), Clause 5(a) to (e), and (g) to (j), Clause 6(1) and (2), Clause 7, Clause 8(2), and Clauses 9 to 12 as third-party beneficiary.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 138"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.",
        "symbolic": "&obligatory{provide_compliance_information} :- role(processor).",
        "predicates": "role(processor); provide_compliance_information",
        "clause": "The processor will not comply with this data protection requirement.",
        "expected_output": "-provide_compliance_information; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall make available to the controller the information necessary to demonstrate compliance with Article 28 obligations.",
    "requirement_symbolic": "&obligatory{provide_compliance_information} :- role(processor).",
    "examples_count": {
      "satisfying": 108,
      "no_facts": 8998,
      "partial": 4131
    }
  },
  "16": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.\nSYMBOLIC: &obligatory{allow_contribute_audits} :- role(processor).\nPREDICATES: role(processor); allow_contribute_audits\nCLAUSE: The processor and the sub-processor warrant that upon request of the controller and/or of the supervisory authority, it will submit its data processing facilities for an audit of the measures referred to in paragraph 1.\nExpected output: role(processor); allow_contribute_audits\n\nExample 2:\nREQUIREMENT: The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.\nSYMBOLIC: &obligatory{allow_contribute_audits} :- role(processor).\nPREDICATES: role(processor); allow_contribute_audits\nCLAUSE: Google replicates data over multiple systems to help to protect against accidental destruction or loss.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.\nSYMBOLIC: &obligatory{allow_contribute_audits} :- role(processor).\nPREDICATES: role(processor); allow_contribute_audits\nCLAUSE: If an individual is recognised during an analysis the confidentiality of that individual will be fully respected.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.\nSYMBOLIC: &obligatory{allow_contribute_audits} :- role(processor).\nPREDICATES: role(processor); allow_contribute_audits\nCLAUSE: In this case, the data regarding respondents will be deleted after ten (10) days.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.\nSYMBOLIC: &obligatory{allow_contribute_audits} :- role(processor).\nPREDICATES: role(processor); allow_contribute_audits\nCLAUSE: \u2018the Controller\u2019 means the controller who transfers the personal data;\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.\nSYMBOLIC: &obligatory{allow_contribute_audits} :- role(processor).\nPREDICATES: role(processor); allow_contribute_audits\nCLAUSE: The processor prohibits any audits or inspections of its data processing facilities.\nExpected output: -allow_contribute_audits; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.",
        "symbolic": "&obligatory{allow_contribute_audits} :- role(processor).",
        "predicates": "role(processor); allow_contribute_audits",
        "clause": "The processor and the sub-processor warrant that upon request of the controller and/or of the supervisory authority, it will submit its data processing facilities for an audit of the measures referred to in paragraph 1.",
        "expected_output": "role(processor); allow_contribute_audits",
        "dpa_source": "Online 69"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.",
        "symbolic": "&obligatory{allow_contribute_audits} :- role(processor).",
        "predicates": "role(processor); allow_contribute_audits",
        "clause": "Google replicates data over multiple systems to help to protect against accidental destruction or loss.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 139"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.",
        "symbolic": "&obligatory{allow_contribute_audits} :- role(processor).",
        "predicates": "role(processor); allow_contribute_audits",
        "clause": "If an individual is recognised during an analysis the confidentiality of that individual will be fully respected.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 75"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.",
        "symbolic": "&obligatory{allow_contribute_audits} :- role(processor).",
        "predicates": "role(processor); allow_contribute_audits",
        "clause": "In this case, the data regarding respondents will be deleted after ten (10) days.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 39"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.",
        "symbolic": "&obligatory{allow_contribute_audits} :- role(processor).",
        "predicates": "role(processor); allow_contribute_audits",
        "clause": "\u2018the Controller\u2019 means the controller who transfers the personal data;",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 126"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.",
        "symbolic": "&obligatory{allow_contribute_audits} :- role(processor).",
        "predicates": "role(processor); allow_contribute_audits",
        "clause": "The processor prohibits any audits or inspections of its data processing facilities.",
        "expected_output": "-allow_contribute_audits; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall allow for and contribute to audits, including inspections, conducted by the controller or another auditor mandated by the controller.",
    "requirement_symbolic": "&obligatory{allow_contribute_audits} :- role(processor).",
    "examples_count": {
      "satisfying": 127,
      "no_facts": 8998,
      "partial": 4112
    }
  },
  "17": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.\nSYMBOLIC: &obligatory{impose_same_obligations_sub_processors} :- role(processor).\nPREDICATES: role(processor); impose_same_obligations_sub_processors\nCLAUSE: processor shall notify the controller about appointment of any new Third-Party Sub-processor, including about the purpose of the Processing to be undertaken by the Third-Party Sub-processor, by sending a notification to controller\u2019s primary contact or, on controller request, to a dedicated e-mail address submitted\u00a0.\nExpected output: role(processor); impose_same_obligations_sub_processors\n\nExample 2:\nREQUIREMENT: The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.\nSYMBOLIC: &obligatory{impose_same_obligations_sub_processors} :- role(processor).\nPREDICATES: role(processor); impose_same_obligations_sub_processors\nCLAUSE: processor shall make available to controller a current list of Subprocessors for the respective Services with the identities of those Subprocessors in accordance with Section 5.5 of this DPA, further detailing processor\u2019s provision of the Subprocessor List.\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.\nSYMBOLIC: &obligatory{impose_same_obligations_sub_processors} :- role(processor).\nPREDICATES: role(processor); impose_same_obligations_sub_processors\nCLAUSE: the ability to ensure the ongoing confidentiality, integrity and availability and resilience of processing systems and services\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.\nSYMBOLIC: &obligatory{impose_same_obligations_sub_processors} :- role(processor).\nPREDICATES: role(processor); impose_same_obligations_sub_processors\nCLAUSE: provide to controller for review such copies of the Contracted Processors' agreements with Sub-processors (which may be redacted to remove confidential commercial information not relevant to the requirements of this Addendum) as controller may request from time to time.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.\nSYMBOLIC: &obligatory{impose_same_obligations_sub_processors} :- role(processor).\nPREDICATES: role(processor); impose_same_obligations_sub_processors\nCLAUSE: \u201cShared Personal Data\u201d means the Personal Data to be shared under the Primary Care Network Agreement;\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.\nSYMBOLIC: &obligatory{impose_same_obligations_sub_processors} :- role(processor).\nPREDICATES: role(processor); impose_same_obligations_sub_processors\nCLAUSE: The processor will engage sub-processors without seeking any authorization from the controller.\nExpected output: -impose_same_obligations_sub_processors; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.",
        "symbolic": "&obligatory{impose_same_obligations_sub_processors} :- role(processor).",
        "predicates": "role(processor); impose_same_obligations_sub_processors",
        "clause": "processor shall notify the controller about appointment of any new Third-Party Sub-processor, including about the purpose of the Processing to be undertaken by the Third-Party Sub-processor, by sending a notification to controller\u2019s primary contact or, on controller request, to a dedicated e-mail address submitted\u00a0.",
        "expected_output": "role(processor); impose_same_obligations_sub_processors",
        "dpa_source": "Online 112"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.",
        "symbolic": "&obligatory{impose_same_obligations_sub_processors} :- role(processor).",
        "predicates": "role(processor); impose_same_obligations_sub_processors",
        "clause": "processor shall make available to controller a current list of Subprocessors for the respective Services with the identities of those Subprocessors in accordance with Section 5.5 of this DPA, further detailing processor\u2019s provision of the Subprocessor List.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 7"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.",
        "symbolic": "&obligatory{impose_same_obligations_sub_processors} :- role(processor).",
        "predicates": "role(processor); impose_same_obligations_sub_processors",
        "clause": "the ability to ensure the ongoing confidentiality, integrity and availability and resilience of processing systems and services",
        "expected_output": "role(processor)",
        "dpa_source": "Online 70"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.",
        "symbolic": "&obligatory{impose_same_obligations_sub_processors} :- role(processor).",
        "predicates": "role(processor); impose_same_obligations_sub_processors",
        "clause": "provide to controller for review such copies of the Contracted Processors' agreements with Sub-processors (which may be redacted to remove confidential commercial information not relevant to the requirements of this Addendum) as controller may request from time to time.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 133"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.",
        "symbolic": "&obligatory{impose_same_obligations_sub_processors} :- role(processor).",
        "predicates": "role(processor); impose_same_obligations_sub_processors",
        "clause": "\u201cShared Personal Data\u201d means the Personal Data to be shared under the Primary Care Network Agreement;",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 76"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.",
        "symbolic": "&obligatory{impose_same_obligations_sub_processors} :- role(processor).",
        "predicates": "role(processor); impose_same_obligations_sub_processors",
        "clause": "The processor will engage sub-processors without seeking any authorization from the controller.",
        "expected_output": "-impose_same_obligations_sub_processors; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall impose the same obligations on engaged sub-processors by way of contract or other legal act under Union or Member-State law.",
    "requirement_symbolic": "&obligatory{impose_same_obligations_sub_processors} :- role(processor).",
    "examples_count": {
      "satisfying": 114,
      "no_facts": 8998,
      "partial": 4125
    }
  },
  "18": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: The processor shall remain fully liable to the controller for the performance of sub-processor obligations.\nSYMBOLIC: &obligatory{remain_fully_liable_sub_processors} :- role(processor).\nPREDICATES: role(processor); remain_fully_liable_sub_processors\nCLAUSE: Where the subprocessor fails to fulfil its data protection obligations under such written agreement the processor shall remain fully liable to the controller for the performance of the subprocessor's obligations under such agreement.\nExpected output: role(processor); remain_fully_liable_sub_processors\n\nExample 2:\nREQUIREMENT: The processor shall remain fully liable to the controller for the performance of sub-processor obligations.\nSYMBOLIC: &obligatory{remain_fully_liable_sub_processors} :- role(processor).\nPREDICATES: role(processor); remain_fully_liable_sub_processors\nCLAUSE: The data processor\u2019s processing of personal data on behalf of the data controller shall mainly pertain to (the nature of the processing):\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: The processor shall remain fully liable to the controller for the performance of sub-processor obligations.\nSYMBOLIC: &obligatory{remain_fully_liable_sub_processors} :- role(processor).\nPREDICATES: role(processor); remain_fully_liable_sub_processors\nCLAUSE: Employee roles are reviewed at least once every six months.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: The processor shall remain fully liable to the controller for the performance of sub-processor obligations.\nSYMBOLIC: &obligatory{remain_fully_liable_sub_processors} :- role(processor).\nPREDICATES: role(processor); remain_fully_liable_sub_processors\nCLAUSE: processor, Inc. shall process personal data as necessary to provide the Subscription Services to controller in accordance with the Agreement.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: The processor shall remain fully liable to the controller for the performance of sub-processor obligations.\nSYMBOLIC: &obligatory{remain_fully_liable_sub_processors} :- role(processor).\nPREDICATES: role(processor); remain_fully_liable_sub_processors\nCLAUSE: \u2018personal data\u2019, \u2018special categories of data\u2019, \u2018process/processing\u2019, \u2018controller\u2019, \u2018processor\u2019, \u2018data subject\u2019 and \u2018supervisory authority\u2019 shall have the same meaning as in Directive 95/46/EC of the European Parliament and of the Council of 24 October 1995 on the protection of individuals with regard to the processing of personal data and on the free movement of such data;\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: The processor shall remain fully liable to the controller for the performance of sub-processor obligations.\nSYMBOLIC: &obligatory{remain_fully_liable_sub_processors} :- role(processor).\nPREDICATES: role(processor); remain_fully_liable_sub_processors\nCLAUSE: The processor will engage sub-processors without seeking any authorization from the controller.\nExpected output: -remain_fully_liable_sub_processors; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "The processor shall remain fully liable to the controller for the performance of sub-processor obligations.",
        "symbolic": "&obligatory{remain_fully_liable_sub_processors} :- role(processor).",
        "predicates": "role(processor); remain_fully_liable_sub_processors",
        "clause": "Where the subprocessor fails to fulfil its data protection obligations under such written agreement the processor shall remain fully liable to the controller for the performance of the subprocessor's obligations under such agreement.",
        "expected_output": "role(processor); remain_fully_liable_sub_processors",
        "dpa_source": "Online 19"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "The processor shall remain fully liable to the controller for the performance of sub-processor obligations.",
        "symbolic": "&obligatory{remain_fully_liable_sub_processors} :- role(processor).",
        "predicates": "role(processor); remain_fully_liable_sub_processors",
        "clause": "The data processor\u2019s processing of personal data on behalf of the data controller shall mainly pertain to (the nature of the processing):",
        "expected_output": "role(processor)",
        "dpa_source": "Online 122"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "The processor shall remain fully liable to the controller for the performance of sub-processor obligations.",
        "symbolic": "&obligatory{remain_fully_liable_sub_processors} :- role(processor).",
        "predicates": "role(processor); remain_fully_liable_sub_processors",
        "clause": "Employee roles are reviewed at least once every six months.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 52"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "The processor shall remain fully liable to the controller for the performance of sub-processor obligations.",
        "symbolic": "&obligatory{remain_fully_liable_sub_processors} :- role(processor).",
        "predicates": "role(processor); remain_fully_liable_sub_processors",
        "clause": "processor, Inc. shall process personal data as necessary to provide the Subscription Services to controller in accordance with the Agreement.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 52"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "The processor shall remain fully liable to the controller for the performance of sub-processor obligations.",
        "symbolic": "&obligatory{remain_fully_liable_sub_processors} :- role(processor).",
        "predicates": "role(processor); remain_fully_liable_sub_processors",
        "clause": "\u2018personal data\u2019, \u2018special categories of data\u2019, \u2018process/processing\u2019, \u2018controller\u2019, \u2018processor\u2019, \u2018data subject\u2019 and \u2018supervisory authority\u2019 shall have the same meaning as in Directive 95/46/EC of the European Parliament and of the Council of 24 October 1995 on the protection of individuals with regard to the processing of personal data and on the free movement of such data;",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 17"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "The processor shall remain fully liable to the controller for the performance of sub-processor obligations.",
        "symbolic": "&obligatory{remain_fully_liable_sub_processors} :- role(processor).",
        "predicates": "role(processor); remain_fully_liable_sub_processors",
        "clause": "The processor will engage sub-processors without seeking any authorization from the controller.",
        "expected_output": "-remain_fully_liable_sub_processors; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "The processor shall remain fully liable to the controller for the performance of sub-processor obligations.",
    "requirement_symbolic": "&obligatory{remain_fully_liable_sub_processors} :- role(processor).",
    "examples_count": {
      "satisfying": 83,
      "no_facts": 8998,
      "partial": 4156
    }
  },
  "19": {
    "system_prompt": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.\n\nExamples:\nExample 1:\nREQUIREMENT: When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.\nSYMBOLIC: &obligatory{assess_security_risk} :- role(processor), risk_assessment_required.\nPREDICATES: role(processor); risk_assessment_required; assess_security_risk\nCLAUSE: security appropriate to the risks that are presented by Processing of controller Personal Data, including protection against accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to controller Personal Data transmitted, stored or otherwise in processor\u2019s possession or under its control.\nExpected output: role(processor); risk_assessment_required; assess_security_risk\n\nExample 2:\nREQUIREMENT: When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.\nSYMBOLIC: &obligatory{assess_security_risk} :- role(processor), risk_assessment_required.\nPREDICATES: role(processor); risk_assessment_required; assess_security_risk\nCLAUSE: Prospective controllers, controllers, resellers, referrers, business partners, and vendors of the controller (who are natural persons);\nExpected output: role(processor)\n\nExample 3:\nREQUIREMENT: When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.\nSYMBOLIC: &obligatory{assess_security_risk} :- role(processor), risk_assessment_required.\nPREDICATES: role(processor); risk_assessment_required; assess_security_risk\nCLAUSE: 11.2.2 Supporting utilities Equipment   are   protected   from   power   failures   and   other disruptions caused by failures in supporting utilities.\nExpected output: role(processor)\n\nExample 4:\nREQUIREMENT: When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.\nSYMBOLIC: &obligatory{assess_security_risk} :- role(processor), risk_assessment_required.\nPREDICATES: role(processor); risk_assessment_required; assess_security_risk\nCLAUSE: When processor uses Third Party Service Provider Cloud Platform to host and/or provide the Services, information about the locations of processor\u2019s Third Party Service Providers\u2019 data centers is available at the Third Party Service Providers\u2019 pages specifying servers locations and may be updated by the Third Party Service Provider from time to time.\nExpected output: NO_FACTS\n\nExample 5:\nREQUIREMENT: When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.\nSYMBOLIC: &obligatory{assess_security_risk} :- role(processor), risk_assessment_required.\nPREDICATES: role(processor); risk_assessment_required; assess_security_risk\nCLAUSE: Data Processing Agreement\nExpected output: NO_FACTS\n\nExample 6:\nREQUIREMENT: When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.\nSYMBOLIC: &obligatory{assess_security_risk} :- role(processor), risk_assessment_required.\nPREDICATES: role(processor); risk_assessment_required; assess_security_risk\nCLAUSE: The processor stores all personal data in unencrypted plain text files.\nExpected output: -assess_security_risk; role(processor)\n\n",
    "base_instructions": "You are a legal-text expert that extracts facts from Data-Processing-Agreement (DPA) segments based on semantic and contextual similarity with GDPR regulatory requirements.\n\nInput always contains:\n1. \"REQUIREMENT\" \u2013 text of the GDPR requirement\n2. \"SYMBOLIC\" \u2013 symbolic representation of the requirement in deontic logic via Answer Set Programming (ASP)\n3. \"PREDICATES\" \u2013 ASP atoms from the requirement (semicolon-separated)\n4. \"CLAUSE\" \u2013 one DPA segment\n\nTASK:\nDecide which (if any) predicates are explicitly fully mentioned in the CLAUSE and output them separated by semicolon\n\nINSTRUCTIONS:\n1) Output a predicate from symbolic rule's body only if the CLAUSE explicitly and fully mentions the same concept this predicate mentions in the REQUIREMENT.\n2) Output a predicate from symbolic rule's head only if the CLAUSE describes a rule for a processor and this rule is semantically the same as the REQUIREMENT\n3) If no predicated are entailed, output exactly NO_FACTS\n4) If the CLAUSE explicitly violates a predicate, output it prefixed by - (e.g. -encrypt_data)\n5) Output ONLY extracted predicates or NO_FACTS, do not output explanation or something else.\n6) Be VERY strict: only extract predicates when the CLAUSE clearly and explicitly mentions the exact same concept as in the requirement.",
    "examples": [
      {
        "example_number": 1,
        "type": "satisfying",
        "requirement": "When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.",
        "symbolic": "&obligatory{assess_security_risk} :- role(processor), risk_assessment_required.",
        "predicates": "role(processor); risk_assessment_required; assess_security_risk",
        "clause": "security appropriate to the risks that are presented by Processing of controller Personal Data, including protection against accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to controller Personal Data transmitted, stored or otherwise in processor\u2019s possession or under its control.",
        "expected_output": "role(processor); risk_assessment_required; assess_security_risk",
        "dpa_source": "Online 74"
      },
      {
        "example_number": 2,
        "type": "processor_only",
        "requirement": "When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.",
        "symbolic": "&obligatory{assess_security_risk} :- role(processor), risk_assessment_required.",
        "predicates": "role(processor); risk_assessment_required; assess_security_risk",
        "clause": "Prospective controllers, controllers, resellers, referrers, business partners, and vendors of the controller (who are natural persons);",
        "expected_output": "role(processor)",
        "dpa_source": "Online 74"
      },
      {
        "example_number": 3,
        "type": "processor_only",
        "requirement": "When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.",
        "symbolic": "&obligatory{assess_security_risk} :- role(processor), risk_assessment_required.",
        "predicates": "role(processor); risk_assessment_required; assess_security_risk",
        "clause": "11.2.2 Supporting utilities Equipment   are   protected   from   power   failures   and   other disruptions caused by failures in supporting utilities.",
        "expected_output": "role(processor)",
        "dpa_source": "Online 67"
      },
      {
        "example_number": 4,
        "type": "discriminating",
        "requirement": "When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.",
        "symbolic": "&obligatory{assess_security_risk} :- role(processor), risk_assessment_required.",
        "predicates": "role(processor); risk_assessment_required; assess_security_risk",
        "clause": "When processor uses Third Party Service Provider Cloud Platform to host and/or provide the Services, information about the locations of processor\u2019s Third Party Service Providers\u2019 data centers is available at the Third Party Service Providers\u2019 pages specifying servers locations and may be updated by the Third Party Service Provider from time to time.",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 139"
      },
      {
        "example_number": 5,
        "type": "discriminating",
        "requirement": "When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.",
        "symbolic": "&obligatory{assess_security_risk} :- role(processor), risk_assessment_required.",
        "predicates": "role(processor); risk_assessment_required; assess_security_risk",
        "clause": "Data Processing Agreement",
        "expected_output": "NO_FACTS",
        "dpa_source": "Online 54"
      },
      {
        "example_number": 6,
        "type": "violation",
        "requirement": "When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.",
        "symbolic": "&obligatory{assess_security_risk} :- role(processor), risk_assessment_required.",
        "predicates": "role(processor); risk_assessment_required; assess_security_risk",
        "clause": "The processor stores all personal data in unencrypted plain text files.",
        "expected_output": "-assess_security_risk; role(processor)",
        "dpa_source": "synthetic"
      }
    ],
    "requirement_text": "When assessing the level of security, the processor shall take into account the risk of accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or processed.",
    "requirement_symbolic": "&obligatory{assess_security_risk} :- role(processor), risk_assessment_required.",
    "examples_count": {
      "satisfying": 55,
      "no_facts": 8998,
      "partial": 4184
    }
  }
}